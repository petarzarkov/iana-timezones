name: Build CI

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 */7 * *'

env:
  CI: true
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [v22.15]
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        with:
          run_install: false
        uses: pnpm/action-setup@v4
      - name: Set node version to ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Typecheck
        run: pnpm run typecheck
      - name: Lint
        run: pnpm run lint
      - name: Test Coverage
        run: pnpm run test:cov
      - name: Install badgen-cli and Generate Coverage Badge
        run: |
          # Install badgen-cli globally for ease of use in the next command
          npm install -g badgen-cli

          # Calculate coverage percentage from the summary report
          COV=$(node -p 't=require(`./coverage/coverage-summary.json`).total,Math.min(...`lines|statements|functions|branches`.split(`|`).map(k=>t[k].pct))')

          if [ "$COV" -ge 95 ]; then
            COLOR="green"
          else
            COLOR="orange"
          fi

          # Generate the badge and save it in the coverage directory
          badgen -j coverage -s $COV% -c $COLOR > coverage/coverage.svg
      - name: Deploy Coverage Report and Badge to gh-pages
        # Only run this on the default branch (e.g., 'main')
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: '41898282+github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy coverage report [skip ci]'
      - name: Version and generate timezones
        id: versioning
        env:
          ORIGINAL_COMMIT_SHA: ${{ github.sha }}
          ORIGINAL_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          OUTPUT=$(pnpm run versioning)
          echo "result=$OUTPUT" >> "$GITHUB_OUTPUT"
      - name: Build
        if: steps.versioning.outputs.result != 'SKIP'
        run: pnpm build
      - name: Publish
        if: steps.versioning.outputs.result != 'SKIP'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public
